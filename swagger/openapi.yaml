openapi: 3.0.3
info:
  title: Ecommerce Users - OpenAPI 3.0
  description: API do Ecommerce desenvolvido durante o curso da Alura.
  contact:
    email: adsongoliveira2022@outlook.com
    name: Desenvolvedor
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.1
servers:
  - url: http://localhost:3001
tags:
  - name: users
    description: Operações relacionadas aos usuários do Ecommerce
paths:
  /api/admin/users:
    post:
      tags:
        - users
      summary: Cadastra um novo usuário
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
      responses:
        '200':
          description: Successfully Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
  /api/users:
    get:
      tags:
        - users
      summary: Retorna uma lista de usuários
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '404':
          $ref: "#/components/responses/NotFound"
  /api/users/{id}:
    get:
      tags:
        - users
      summary: Retorna um usuário pelo ID
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/admin/users/{id}:
    put:
      tags:
        - users
      summary: Alterar um usuário
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
      responses:
        '201':
          description: Successfully Edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - users
      summary: Deletar usuário
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: Successfully Deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Users:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          email:
            type: string
          password:
            type: string
          cpf:
            type: integer
          phone:
            type: string
          street_address:
            type: string
          number_address:
            type: integer
          more_info_address:
            type: string
          cep:
            type: integer
          city:
            type: string
          state:
            type: string
          created_at:
            type: string
            format: date-time
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        cpf:
          type: integer
        phone:
          type: string
        street_address:
          type: string
        number_address:
          type: integer
        more_info_address:
          type: string
        cep:
          type: integer
        city:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
    UserPost:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        cpf:
          type: integer
        phone:
          type: string
        street_address:
          type: string
        number_address:
          type: integer
        more_info_address:
          type: string
        cep:
          type: integer
        city:
          type: string
        state:
          type: string
  responses:
    BadRequest:
      description: "Bad format of requisition"
    Unauthorized:
      description: "Invalid User or invalid Token"
    NotFound:
      description: "Entity not found"
  parameters:
    IdParam:
      name: id
      in: path
      description: ID da categoria
      required: true
      schema:
        type: integer