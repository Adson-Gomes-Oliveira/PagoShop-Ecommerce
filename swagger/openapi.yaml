openapi: 3.0.3
info:
  title: Ecommerce Products - OpenAPI 3.0
  description: API do Ecommerce desenvolvido durante o curso da Alura.
  contact:
    email: adsongoliveira2022@outlook.com
    name: Desenvolvedor
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.1
servers:
  - url: http://localhost:3001
tags:
  - name: categories
    description: Operações relacionadas as categorias do Ecommerce
  - name: products
    description: Operações relacionadas aos produtos do Ecommerce
paths:
  /api/categories:
    get:
      tags:
        - categories
      summary: Retorna uma lista de categorias
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categories"
        '404':
          $ref: "#/components/responses/NotFound"
  /api/admin/categories:
    post:
      tags:
        - categories
      summary: Cria uma nova categoria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPost'
        required: true
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
  /api/categories/{id}:
    get:
      tags:
        - categories
      summary: Retorna uma categoria pelo ID
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/admin/categories/{id}:
    put:
      tags:
        - categories
      summary: Alterar uma categoria
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Successfully Edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - categories
      summary: Ativar categoria
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPatch'
      responses:
        '201':
          description: Successfully Activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - categories
      summary: Deletar categoria
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: Successfully Deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/admin/products/:
    post:
      tags:
        - products
      summary: Adicionar um novo produto ao Ecommerce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPost'
      responses:
        '200':
          description: Successfully Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/products:
    get:
      tags:
        - products
      summary: Retorna uma lista de produtos
      parameters:
        - $ref: '#/components/parameters/searchHigherParam'
        - $ref: '#/components/parameters/searchLessParam'
        - $ref: '#/components/parameters/searchCategoryParam'
        - $ref: '#/components/parameters/searchStockHigherParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
        '400':
            $ref: "#/components/responses/BadRequest"
        '404':
            $ref: "#/components/responses/NotFound"
  /api/products/{id}:
    get:
      tags:
        - products
      summary: Retorna um produto pelo ID
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
            $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/admin/products/{id}:
    put:
      tags:
        - products
      summary: Alterar um produto
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPost'
      responses:
        '201':
          description: Successfully Edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - products
      summary: Deletar um produto
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: Successfully Deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Categories:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          status:
            type: integer
            example: 1
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: integer
          example: 1
    CategoryPost:
      type: object
      properties:
        name:
          type: string
    CategoryPatch:
      type: object
      properties:
        status:
          type: integer
          example: 1
    Products:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          slug:
            type: string
          unit_price:
            type: number
          stock_quantity:
            type: integer
          category_id:
            type: string
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        unit_price:
          type: number
        stock_quantity:
          type: integer
        category_id:
          type: string
    ProductPost:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        unit_price:
          type: number
        stock_quantity:
          type: integer
        category_id:
          type: string
  responses:
    BadRequest:
      description: "Bad format of requisition"
    Unauthorized:
      description: "Invalid User or invalid Token"
    NotFound:
      description: "Entity not found"
  parameters:
    IdParam:
      name: id
      in: path
      description: ID da categoria
      required: true
      schema:
        type: integer
    searchHigherParam:
      name: higherThan
      in: query
      description: Preço maior que
      required: false
      schema:
        type: number
    searchLessParam:
      name: lessThan
      in: query
      description: Preço menor que
      required: false
      schema:
        type: number
    searchCategoryParam:
      name: category
      in: query
      description: Categoria do produto
      required: false
      schema:
        type: string
    searchStockHigherParam:
      name: stockHigher
      in: query
      description: Estoque maior que
      required: false
      schema:
        type: number